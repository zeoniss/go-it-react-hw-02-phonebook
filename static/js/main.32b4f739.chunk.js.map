{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","nameInputId","uuidv4","telInputId","state","name","number","changeInput","e","inputName","currentTarget","setState","value","handleFormSubmit","preventDefault","Boolean","props","existContacts","find","element","alert","onFormSubmit","resetInput","this","onSubmit","className","styles","contactForm","htmlFor","contactForm__label","contactForm__title","id","type","contactForm__input","pattern","title","required","onChange","contactForm__button","Component","ContactList","contactsForList","onDeleteContact","contactList","map","contact","contactList__item","contactList__elem","contactList__button","onClick","Filter","onFilterValue","filter__title","filter__input","App","contacts","filter","addContact","contactData","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32b4f739.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2pgUO\",\"contactForm__label\":\"ContactForm_contactForm__label__2_1a9\",\"contactForm__input\":\"ContactForm_contactForm__input__2BMwm\",\"contactForm__title\":\"ContactForm_contactForm__title__3cBEX\",\"contactForm__button\":\"ContactForm_contactForm__button__2HMu8\"};","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from '../ContactForm/ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  nameInputId = uuidv4();\r\n  telInputId = uuidv4();\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  changeInput = e => {\r\n    const inputName = e.currentTarget.name;\r\n    this.setState({\r\n      [inputName]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // checkContact = () => {\r\n  //   this.state.name ===\r\n  // }\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    const checkContact = Boolean(\r\n      this.props.existContacts.find(\r\n        element => element.name === this.state.name,\r\n      ),\r\n    );\r\n    //console.log(checkContact===true);\r\n\r\n    checkContact\r\n      ? alert(`${this.state.name} is already in contacts`)\r\n      : this.props.onFormSubmit(this.state);\r\n\r\n    this.resetInput();\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit} className={styles.contactForm}>\r\n        <label htmlFor={this.nameInputId} className={styles.contactForm__label}>\r\n          <span className={styles.contactForm__title}>Name:</span>\r\n          <input\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={styles.contactForm__input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value={name}\r\n            required\r\n            onChange={this.changeInput}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={this.telInputId} className={styles.contactForm__label}>\r\n          <span className={styles.contactForm__title}> Phone:</span>\r\n          <input\r\n            id={this.telInputId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={styles.contactForm__input}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            value={number}\r\n            required\r\n            onChange={this.changeInput}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.contactForm__button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactList/ContactList.module.css';\r\n\r\nconst ContactList = ({ contactsForList, onDeleteContact }) => (\r\n  <ul className={styles.contactList}>\r\n    {contactsForList.map(contact => (\r\n      <li key={uuidv4()} className={styles.contactList__item}>\r\n        <span className={styles.contactList__elem}> {contact.name}:</span>\r\n        <span>{contact.number} </span>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.contactList__button}\r\n          onClick={() => onDeleteContact(contact.id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contactsForList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport styles from '../Filter/Filter.module.css';\r\n\r\nconst Filter = ({ onFilterValue, value }) => (\r\n  <>\r\n    <p className={styles.filter__title}>Find contacts by name:</p>\r\n    <label htmlFor={uuidv4()} />\r\n    <input\r\n      className={styles.filter__input}\r\n      id={uuidv4()}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      onChange={onFilterValue}\r\n      value={value}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nimport './index.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const contactData = {\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contactData, ...contacts],\n    }));\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(\n        contacts => contacts.id !== contactId,\n      ),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onFormSubmit={this.addContact} existContacts={contacts} />\n        {/* filter */}\n        <Filter value={filter} onFilterValue={this.changeFilter} />\n\n        {contacts.length > 0 && (\n          <div>\n            <h2 className=\"subtitle\">Contacts</h2>\n            <ContactList\n              contactsForList={visibleContacts}\n              onDeleteContact={this.deleteContact}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1Mciu\",\"contactList__item\":\"ContactList_contactList__item__2bc-a\",\"contactList__elem\":\"ContactList_contactList__elem__2V3KZ\",\"contactList__button\":\"ContactList_contactList__button__1aBhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__title\":\"Filter_filter__title__2_Xgl\",\"filter__input\":\"Filter_filter__input__10B83\"};"],"sourceRoot":""}